/*!
 * JSON Side Navigation Demo
 * A responsive-designed one-page microsite, built in NodeJS + HTML5 + Sass + Gulp, with JSON-sourced nav items data and onHashChange-based URL routing
 * http://github.com/minigodzilla/json-sidenav-demo
 * @author Steve Diabo
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
@import url("https://fonts.googleapis.com/css?family=Fira+Sans:800|Podkova");.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{background-color:#333;color:gray;padding:0;font-family:Podkova,serif;font-size:16px;line-height:24px}body.nav-open{background-color:#000}body,html{min-height:100vh}a{color:inherit;text-decoration:none;-webkit-tap-highlight-color:transparent}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}header{position:fixed;top:0;width:180vw;height:60px;background-color:#252525;transform:translate3d(-80vw,0,0);transition:transform .3s;z-index:2}.nav-open header{transform:translateZ(0)}header h1{position:absolute;margin:0;font-family:Podkova,sans-serif;font-size:21px;line-height:60px;padding-left:24px}header #mobile-open-close-btn{width:20vw;height:60px;position:absolute;top:0;left:80vw}header #mobile-open-close-btn .glyph{position:absolute;background-position:50% 50%;background-repeat:no-repeat;width:100%;height:100%;opacity:0;transition:opacity .3s ease}header #mobile-open-close-btn .glyph.open{background-image:url(../assets/img/toggle-open.svg);opacity:1}header #mobile-open-close-btn .glyph.close{background-image:url(../assets/img/toggle-close.svg)}.nav-open header #mobile-open-close-btn .glyph.open{opacity:0}.nav-open header #mobile-open-close-btn .glyph.close{opacity:1}nav{position:fixed;top:0;width:80vw;height:100vh;transform:translateX(-80vw);transition:transform .3s;z-index:1;background-color:#333;overflow:auto}.nav-open nav{transform:translateX(0)}nav ul{margin:60px 0 0;padding:12px 0 0;list-style:none;line-height:48px}nav li a{display:block;position:relative;padding:0 0 0 24px;white-space:nowrap;font-family:Fira Sans,sans-serif;font-weight:800;font-size:21px;color:#d9d9d9}nav li a:active{background-color:#404040}nav li.has-child-nav a .glyph-span{position:absolute;top:0;right:0;width:48px;height:48px;background-image:url(../assets/img/menu-item-chevron.svg);background-position:100% 50%;background-repeat:no-repeat;transition:transform .3s}nav li.has-child-nav.active a .glyph-span{transform:rotate(-180deg)}nav li ul{margin:0;padding:0;overflow:hidden;max-height:0;transition:max-height .3s}nav li.active ul{max-height:320px}nav li ul a{font-family:Podkova,serif;font-size:16px;padding-left:36px;color:gray}nav li ul a:active{color:#d9d9d9}nav li ul a .glyph-span{display:none}#main{margin-top:60px;overflow-x:hidden;overflow-y:auto;background-color:#333;transform:translateX(0);transition:transform .4s,opacity .4s;padding:0 24px 24px;text-align:justify}.nav-open #main{transform:translateX(80vw);opacity:.5;position:fixed}#main #hero-image{height:240px;position:relative;overflow:hidden;margin:0 -24px}#main #hero-image img{position:absolute;min-width:480px;max-width:100%;height:auto;min-height:auto;left:50%;top:50%;transform:translate(-50%,-50%)}#main h2{color:#d9d9d9;font-family:Fira Sans,sans-serif;font-weight:800;font-size:44px;line-height:48px;text-align:left;margin:46px 0 33px}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media only screen and (min-width:768px){body{background:#333;overflow:hidden;overflow-y:auto}header{position:static;width:100%;height:60px;transition:none}.nav-open header,header{transform:none}header h1{line-height:60px}header #mobile-open-close-btn{display:none}nav{position:absolute;top:0;left:220px;width:auto;height:60px;transition:none;background-color:transparent;overflow:visible}.nav-open nav,nav{transform:none}nav ul{list-style:none;margin:0;padding:0;width:960px;line-height:60px}nav li{float:left;transition:background-color .3s,color .3s}nav li:hover{background-color:#333}nav li a{color:#278;padding:0 24px;font-size:16px;transition:background-color .3s,color .3s}nav li:hover a{background-color:#333;color:#d9d9d9}nav li.has-child-nav a .glyph-span{display:none}nav li ul{display:block;visibility:hidden;opacity:0;position:absolute;width:auto;max-height:none;background-color:#333;line-height:48px;transition:opacity .3s}nav li ul li:hover a{background-color:#404040}nav li:hover ul{visibility:visible;opacity:1}nav li li{float:none}nav li ul a{padding:0 48px 0 24px}#main{margin-top:0;background-color:transparent;transform:none;padding:0;transition:none;text-align:left}.nav-open #main{transform:none;opacity:1;position:static}#main #hero-image{height:640px;position:relative;overflow:hidden;margin:0}#main #hero-image img{min-width:100%;max-width:none;height:auto;min-height:640px;top:50%}#main #hero-image img,#main h2{position:absolute;left:50%;transform:translate(-50%,-50%)}#main h2{width:820px;text-align:center;font-size:120px;line-height:132px;margin:0;top:392px}#main #main-section-copy{max-width:920px;margin:0 auto;padding:60px 24px 30px}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvX3R5cG9ncmFwaHkuc2NzcyIsIm1vZHVsZXMvX2NsZWFyZml4LnNjc3MiLCJzdHlsZS5jc3MiLCJtb2R1bGVzL19kZWZhdWx0cy5zY3NzIiwibW9kdWxlcy9fdmFycy5zY3NzIiwibW9kdWxlcy9fbm9ybWFsaXplLnNjc3MiLCJwYXJ0aWFscy9faGVhZGVyLnNjc3MiLCJwYXJ0aWFscy9fbmF2LnNjc3MiLCJwYXJ0aWFscy9fbWFpbi5zY3NzIiwibW9kdWxlcy9fbWlzYy5zY3NzIiwibW9kdWxlcy9fYnJlYWtwb2ludHMuc2NzcyIsIm1vZHVsZXMvX2RlZmF1bHRzX2Rlc2t0b3Auc2NzcyIsInBhcnRpYWxzL19oZWFkZXJfZGVza3RvcC5zY3NzIiwicGFydGlhbHMvX25hdl9kZXNrdG9wLnNjc3MiLCJwYXJ0aWFscy9fbWFpbl9kZXNrdG9wLnNjc3MiLCJtb2R1bGVzL19wcmludC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsNkVBQVksQUNBWiwyQkFDRSxZQUFhLEFBQ2IsYUFBZSxDQUNoQixBQUNELFFDRUUsTUREUyxDQURYLEFBU0MsYUFGRyxVQUFZLENBQ2IsQUVaSCxFQUNFLHNCQUF1QixBQUN2QiwyQkFBNEIsQUFDNUIsaUNBQW1DLENBQ3BDLEFBQ0QsS0FDRSxlQUFpQixDQUNsQixBQUNELEtBQ0Usc0JBQ0EsQUNGWSxXRElaLEFDRmUsVURFSixBQUNYLDBCQUEyQixBQUMzQixlQUFnQixBQUNoQixnQkFBa0IsQ0FDbkIsQUFDRCxjQUNFLHFCQ1pVLENEYVgsQUFDRCxVQUNDLGdCQUFrQixDQUNsQixBQUNELEVBQ0UsY0FBZSxBQUNmLHFCQUFzQixBQUN0Qix1Q0FBaUMsQ0FDbEM7O0FFM0JELDRFQUE0RSxBQU81RSxLQUNFLHVCQUF3QixBQUN4QiwwQkFBMkIsQUFDM0IsNkJBQStCLENBQ2hDLEFBTUQsS0FDRSxRQUFVLENBQ1gsQUFXRCxvRkFZRSxhQUFlLENBQ2hCLEFBTUQsNEJBSUUsb0JBQXNC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QUNFLGFBQWMsQUFDZCw2QkFBOEIsQUFDOUIsZUFBZ0IsQUFDaEIsVUFBVyxBQUNYLGdCQUFpQixBQUNqQixlQUFpQixDQUNsQixBQUVELGdCQUNFLGVBQWdCLEFBQ2hCLFVBQVcsQUFDWCxlQUFpQixDQUNsQixBQUNBLGtCQUNFLGFBQWMsQUFDZCxrQkFBbUIsQUFDbkIsZ0JBQWlCLEFBQ2pCLFFBQVUsQ0FDWCxBQUVBLHNCQUVFLGVBQWdCLEFBQ2hCLGVBQW1CLEFBQ25CLFlBQWEsQUFDYixpQkFBa0IsQUFFbEIsT0FBUyxDQUVWLEFBRUYsK0JBVkcsa0JBQW1CLEFBS25CLFNBQVUsQUFFViw4QkFBb0IsQ0FHdkIsQUFVQyxTQVJDLFlBQWEsQUFDYixrQkFBbUIsQUFDbkIsZ0JBQWlCLEFBQ2pCLGtCQUFtQixBQUNuQixTQUFVLEFBRVYsU0FBVyxDQUVaLEFBRUQseUJBQ0MsZ0JBQWlCLEFBQ2pCLGNBQWUsQUFDZixzQkFBNkIsQ0FDN0IsQ0FBQSxBQ2hERixhQUNFLEVBQ0UsaUNBQW1DLEFBQ25DLHFCQUF1QixBQUN2QiwwQkFBNEIsQUFDNUIsMEJBQTZCLENBQzlCLEFBQ0QsWUFFRSx5QkFBMkIsQ0FDNUIsQUFDRCxjQUNFLDJCQUE0QixDQUM3QixBQUNELGtCQUNFLDRCQUE2QixDQUM5QixBQUNELDREQUdFLFVBQVksQ0FDYixBQUNELGVBRUUsc0JBQXVCLEFBQ3ZCLHVCQUF5QixDQUMxQixBQUNELE1BQ0UsMEJBQTRCLENBQzdCLEFBQ0QsT0FFRSx1QkFBeUIsQ0FDMUIsQUFDRCxJQUNFLHdCQUEyQixDQUM1QixBQUNELE1BQ0UsV0FBYyxDQUFBLEFBRWhCLFFBR0UsVUFBVyxBQUNYLFFBQVUsQ0FDWCxBQUNELE1BRUUsc0JBQXdCLENBQ3pCLENBQUEiLCJmaWxlIjoic3R5bGUubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9RmlyYStTYW5zOjgwMHxQb2Rrb3ZhJyk7IiwiJWNsZWFyIHtcbiAgY29udGVudDogJyAnO1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cbi5jbGVhciB7XG4gICp6b29tOiAxO1xuICAmOmJlZm9yZSB7XG4gICAgQGV4dGVuZCAlY2xlYXI7XG4gIH1cbiAgJjphZnRlciB7XG4gICAgQGV4dGVuZCAlY2xlYXI7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cbiIsIkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUZpcmErU2Fuczo4MDB8UG9ka292YVwiKTtcbi5jbGVhcjpiZWZvcmUsIC5jbGVhcjphZnRlciB7XG4gIGNvbnRlbnQ6ICcgJztcbiAgZGlzcGxheTogdGFibGU7IH1cblxuLmNsZWFyIHtcbiAgKnpvb206IDE7IH1cbiAgLmNsZWFyOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyB9XG5cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlOyB9XG5cbmJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICBjb2xvcjogIzgwODA4MDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBmb250LWZhbWlseTogUG9ka292YSxzZXJpZjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjRweDsgfVxuXG5ib2R5Lm5hdi1vcGVuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDsgfVxuXG5ib2R5LCBodG1sIHtcbiAgbWluLWhlaWdodDogMTAwdmg7IH1cblxuYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIElFIGFuZCBpT1MuXG4gKi9cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xudGVtcGxhdGUsXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnByZSxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9udCB3ZWlnaHQgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIG9wYWNpdHk6IDAuNTQ7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbmhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTgwdnc7XG4gIGhlaWdodDogNjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI1MjUyNTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtODB2dywgMCwgMCk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcztcbiAgei1pbmRleDogMTE7IH1cbiAgLm5hdi1vcGVuIGhlYWRlciB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTsgfVxuICBoZWFkZXIgaDEge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBtYXJnaW46IDA7XG4gICAgZm9udC1mYW1pbHk6ICdQb2Rrb3ZhJyxzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMjFweDtcbiAgICBsaW5lLWhlaWdodDogNjBweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7IH1cbiAgaGVhZGVyICNtb2JpbGUtb3Blbi1jbG9zZS1idG4ge1xuICAgIHdpZHRoOiAyMHZ3O1xuICAgIGhlaWdodDogNjBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDgwdnc7IH1cbiAgICBoZWFkZXIgI21vYmlsZS1vcGVuLWNsb3NlLWJ0biAuZ2x5cGgge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcbiAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDMwMG1zIGVhc2U7IH1cbiAgICAgIGhlYWRlciAjbW9iaWxlLW9wZW4tY2xvc2UtYnRuIC5nbHlwaC5vcGVuIHtcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vYXNzZXRzL2ltZy90b2dnbGUtb3Blbi5zdmdcIik7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cbiAgICAgIGhlYWRlciAjbW9iaWxlLW9wZW4tY2xvc2UtYnRuIC5nbHlwaC5jbG9zZSB7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2Fzc2V0cy9pbWcvdG9nZ2xlLWNsb3NlLnN2Z1wiKTsgfVxuICAgICAgLm5hdi1vcGVuIGhlYWRlciAjbW9iaWxlLW9wZW4tY2xvc2UtYnRuIC5nbHlwaC5vcGVuIHtcbiAgICAgICAgb3BhY2l0eTogMDsgfVxuICAgICAgLm5hdi1vcGVuIGhlYWRlciAjbW9iaWxlLW9wZW4tY2xvc2UtYnRuIC5nbHlwaC5jbG9zZSB7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cblxubmF2IHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA4MHZ3O1xuICBoZWlnaHQ6IDEwMHZoO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTgwdncpO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMzAwbXM7XG4gIHotaW5kZXg6IDEwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICBvdmVyZmxvdzogYXV0bzsgfVxuICAubmF2LW9wZW4gbmF2IHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgbmF2IHVsIHtcbiAgICBtYXJnaW46IDYwcHggMCAwIDA7XG4gICAgcGFkZGluZzogMTJweCAwIDAgMDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIGxpbmUtaGVpZ2h0OiA0OHB4OyB9XG4gIG5hdiBsaSBhIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogMCAwIDAgMjRweDtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIGZvbnQtZmFtaWx5OiAnRmlyYSBTYW5zJyxzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgZm9udC1zaXplOiAyMXB4O1xuICAgIGNvbG9yOiAjZDlkOWQ5OyB9XG4gIG5hdiBsaSBhOmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQwNDA0MDsgfVxuICBuYXYgbGkuaGFzLWNoaWxkLW5hdiBhIC5nbHlwaC1zcGFuIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHdpZHRoOiA0OHB4O1xuICAgIGhlaWdodDogNDhweDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9hc3NldHMvaW1nL21lbnUtaXRlbS1jaGV2cm9uLnN2Z1wiKTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDAlIDUwJTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtczsgfVxuICBuYXYgbGkuaGFzLWNoaWxkLW5hdi5hY3RpdmUgYSAuZ2x5cGgtc3BhbiB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTE4MGRlZyk7IH1cbiAgbmF2IGxpIHVsIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1heC1oZWlnaHQ6IDA7XG4gICAgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAzMDBtczsgfVxuICBuYXYgbGkuYWN0aXZlIHVsIHtcbiAgICBtYXgtaGVpZ2h0OiAzMjBweDsgfVxuICBuYXYgbGkgdWwgYSB7XG4gICAgZm9udC1mYW1pbHk6ICdQb2Rrb3ZhJyxzZXJpZjtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgcGFkZGluZy1sZWZ0OiAzNnB4O1xuICAgIGNvbG9yOiAjODA4MDgwOyB9XG4gIG5hdiBsaSB1bCBhOmFjdGl2ZSB7XG4gICAgY29sb3I6ICNkOWQ5ZDk7IH1cbiAgbmF2IGxpIHVsIGEgLmdseXBoLXNwYW4ge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuI21haW4ge1xuICBtYXJnaW4tdG9wOiA2MHB4O1xuICBvdmVyZmxvdy14OiBoaWRkZW47XG4gIG92ZXJmbG93LXk6IGF1dG87XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDQwMG1zLCBvcGFjaXR5IDQwMG1zO1xuICBwYWRkaW5nOiAwIDI0cHggMjRweCAyNHB4O1xuICB0ZXh0LWFsaWduOiBqdXN0aWZ5OyB9XG4gIC5uYXYtb3BlbiAjbWFpbiB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDgwdncpO1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7IH1cbiAgI21haW4gI2hlcm8taW1hZ2Uge1xuICAgIGhlaWdodDogMjQwcHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgbWFyZ2luOiAwIC0yNHB4OyB9XG4gICAgI21haW4gI2hlcm8taW1hZ2UgaW1nIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIG1pbi13aWR0aDogNDgwcHg7XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBtaW4taGVpZ2h0OiBhdXRvO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgfVxuICAjbWFpbiBoMiB7XG4gICAgY29sb3I6ICNkOWQ5ZDk7XG4gICAgZm9udC1mYW1pbHk6ICdGaXJhIFNhbnMnLHNhbnMtc2VyaWY7XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICBmb250LXNpemU6IDQ0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDQ4cHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBtYXJnaW46IDQ2cHggMCAzM3B4IDA7IH1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuOjotbW96LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG46Oi13ZWJraXQtc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgYm9keSB7XG4gICAgYmFja2dyb3VuZDogIzMzMztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG92ZXJmbG93LXk6IGF1dG87IH1cbiAgaGVhZGVyIHtcbiAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNjBweDtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gICAgdHJhbnNpdGlvbjogbm9uZTsgfVxuICAubmF2LW9wZW4gaGVhZGVyIHtcbiAgICB0cmFuc2Zvcm06IG5vbmU7IH1cbiAgaGVhZGVyIGgxIHtcbiAgICBsaW5lLWhlaWdodDogNjBweDsgfVxuICBoZWFkZXIgI21vYmlsZS1vcGVuLWNsb3NlLWJ0biB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICBuYXYge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMjIwcHg7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgaGVpZ2h0OiA2MHB4O1xuICAgIHRyYW5zZm9ybTogbm9uZTtcbiAgICB0cmFuc2l0aW9uOiBub25lO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIG92ZXJmbG93OiB2aXNpYmxlOyB9XG4gICAgLm5hdi1vcGVuIG5hdiB7XG4gICAgICB0cmFuc2Zvcm06IG5vbmU7IH1cbiAgICBuYXYgdWwge1xuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICB3aWR0aDogOTYwcHg7XG4gICAgICBsaW5lLWhlaWdodDogNjBweDsgfVxuICAgIG5hdiBsaSB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMzAwbXMsIGNvbG9yIDMwMG1zOyB9XG4gICAgICBuYXYgbGk6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzOyB9XG4gICAgICBuYXYgbGkgYSB7XG4gICAgICAgIGNvbG9yOiAjMjc4O1xuICAgICAgICBwYWRkaW5nOiAwIDI0cHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAzMDBtcywgY29sb3IgMzAwbXM7IH1cbiAgICAgIG5hdiBsaTpob3ZlciBhIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgICAgICAgY29sb3I6ICNkOWQ5ZDk7IH1cbiAgICAgIG5hdiBsaS5oYXMtY2hpbGQtbmF2IGEgLmdseXBoLXNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgICBuYXYgbGkgdWwge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICBtYXgtaGVpZ2h0OiBub25lO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzO1xuICAgICAgICBsaW5lLWhlaWdodDogNDhweDtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAzMDBtczsgfVxuICAgICAgICBuYXYgbGkgdWwgbGk6aG92ZXIgYSB7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQwNDA0MDsgfVxuICAgICAgbmF2IGxpOmhvdmVyIHVsIHtcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgICAgbmF2IGxpIGxpIHtcbiAgICAgICAgZmxvYXQ6IG5vbmU7IH1cbiAgICAgIG5hdiBsaSB1bCBhIHtcbiAgICAgICAgcGFkZGluZzogMCA0OHB4IDAgMjRweDsgfVxuICAjbWFpbiB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gICAgcGFkZGluZzogMDtcbiAgICB0cmFuc2l0aW9uOiBub25lO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLm5hdi1vcGVuICNtYWluIHtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gICAgb3BhY2l0eTogMTtcbiAgICBwb3NpdGlvbjogc3RhdGljOyB9XG4gICNtYWluICNoZXJvLWltYWdlIHtcbiAgICBoZWlnaHQ6IDY0MHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1hcmdpbjogMDsgfVxuICAjbWFpbiAjaGVyby1pbWFnZSBpbWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBtaW4td2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiBpbml0aWFsO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtaW4taGVpZ2h0OiA2NDBweDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IH1cbiAgI21haW4gaDIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogODIwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMTIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDEzMnB4O1xuICAgIG1hcmdpbjogMDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdG9wOiAzOTJweDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgfVxuICAjbWFpbiAjbWFpbi1zZWN0aW9uLWNvcHkge1xuICAgIG1heC13aWR0aDogOTIwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogNjBweCAyNHB4IDMwcHggMjRweDsgfSB9XG5cbkBtZWRpYSBwcmludCB7XG4gICoge1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsgfVxuICBhLFxuICBhOnZpc2l0ZWQge1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG4gIGFbaHJlZl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKGhyZWYpIFwiKVwiOyB9XG4gIGFiYnJbdGl0bGVdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cih0aXRsZSkgXCIpXCI7IH1cbiAgLmlyIGE6YWZ0ZXIsXG4gIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlcixcbiAgYVtocmVmXj1cIiNcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOyB9XG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuICBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG4gIEBwYWdlIHtcbiAgICBtYXJnaW46IDAuNWNtOyB9XG4gIHAsXG4gIGgyLFxuICBoMyB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7IH1cbiAgaDIsXG4gIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDsgfSB9XG4iLCIqIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xufVxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogNjIuNSU7XG59XG5ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJhc2UtYmc7XG4gIGNvbG9yOiAkYmFzZS1jb2xvcjtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBmb250LWZhbWlseTogUG9ka292YSxzZXJpZjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBsaW5lLWhlaWdodDogMjRweDtcbn1cbmJvZHkubmF2LW9wZW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYm9keS1iZztcbn1cbmJvZHksaHRtbHtcblx0bWluLWhlaWdodDogMTAwdmg7XG59XG5hIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiByZ2JhKDAsMCwwLDApO1xufSIsIiRiYXNlIDogI0Y3RjZGMDtcbiRkYXJrZW4gOiBkYXJrZW4oI0Y3RjZGMCAsIDMwJSk7XG4kYmFjazogZGFya2VuKCNGN0Y2RjAsIDQwJSk7XG5cbi8vIHN3YXRjaCBjb2xvciB2YXJzXG5cbiRibGFjazogIzAwMDtcbiRncmF5LTE1OiAjMjUyNTI1O1xuJGdyYXktMjA6ICMzMzM7XG4kZ3JheS0yNTogIzQwNDA0MDtcbiRncmF5LTUwOiAjODA4MDgwO1xuJGdyYXktNzU6ICNiZmJmYmY7XG4kZ3JheS04MDogI2NjYztcbiRncmF5LTg1OiAjZDlkOWQ5O1xuJGFjY2VudC1ibHVlOiAjMjc4O1xuXG4vLyBzZW1hbnRpYyBjb2xvciB2YXJzXG5cbiRhY2NlbnQtY29sb3I6ICRhY2NlbnQtYmx1ZTtcbiRib2R5LWJnOiAkYmxhY2s7XG4kYmFzZS1iZzogJGdyYXktMjA7XG4kYmFzZS1jb2xvcjogJGdyYXktNTA7XG4kaGVhZGVyLWJnOiAkZ3JheS0xNTtcbiRuYXYtYmc6ICRncmF5LTIwO1xuJG5hdi1jb2xvcjogJGdyYXktODU7XG4kY2hpbGQtbmF2LWNvbG9yOiAkZ3JheS01MDtcbiRjaGlsZC1uYXYtY29sb3ItaG92ZXI6ICRncmF5LTg1O1xuJGRlc2t0b3AtbmF2LWNvbG9yOiAkYWNjZW50LWJsdWU7XG4kZGVza3RvcC1uYXYtY29sb3ItaG92ZXI6ICRncmF5LTg1O1xuJGRlc2t0b3AtbmF2LWJnLWhvdmVyOiAkZ3JheS0yNTtcbiRtYWluLWhlYWRpbmctY29sb3I6ICRncmF5LTg1O1xuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjQuMS4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gSUUgYW5kIGlPUy5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsIC8qIDEgKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5tYWluLCAvKiAyICovXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkgeyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbnRlbXBsYXRlLCAvKiAxICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG4iLCJoZWFkZXIge1xuXHRwb3NpdGlvbjogZml4ZWQ7XG5cdHRvcDogMDtcblx0d2lkdGg6IDE4MHZ3O1xuXHRoZWlnaHQ6IDYwcHg7XG5cdGJhY2tncm91bmQtY29sb3I6ICRoZWFkZXItYmc7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTgwdncsMCwwKTtcblx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDMwMG1zO1xuXHR6LWluZGV4OiAxMTtcblxuXHQubmF2LW9wZW4gJiB7XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLDAsMCk7XG5cdH1cblxuXHRoMSB7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdG1hcmdpbjogMDtcblx0XHRmb250LWZhbWlseTogJ1BvZGtvdmEnLHNhbnMtc2VyaWY7XG5cdFx0Zm9udC1zaXplOiAyMXB4O1xuXHRcdGxpbmUtaGVpZ2h0OiA2MHB4O1xuXHRcdHBhZGRpbmctbGVmdDogMjRweDtcblx0fVxuXG5cdCNtb2JpbGUtb3Blbi1jbG9zZS1idG4ge1xuXHRcdHdpZHRoOiAyMHZ3O1xuXHRcdGhlaWdodDogNjBweDtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0dG9wOiAwO1xuXHRcdGxlZnQ6IDgwdnc7XG5cblx0XHQuZ2x5cGgge1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogNTAlIDUwJTtcblx0XHRcdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG5cdFx0XHR3aWR0aDogMTAwJTtcblx0XHRcdGhlaWdodDogMTAwJTtcblx0XHRcdG9wYWNpdHk6IDA7XG5cdFx0XHR0cmFuc2l0aW9uOiBvcGFjaXR5IDMwMG1zIGVhc2U7XG5cblx0XHRcdCYub3BlbiB7XG5cdFx0XHRcdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vYXNzZXRzL2ltZy90b2dnbGUtb3Blbi5zdmcnKTtcblx0XHRcdFx0b3BhY2l0eTogMTtcblx0XHRcdH1cblxuXHRcdFx0Ji5jbG9zZSB7XG5cdFx0XHRcdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vYXNzZXRzL2ltZy90b2dnbGUtY2xvc2Uuc3ZnJyk7XG5cdFx0XHR9XG5cblx0XHRcdC5uYXYtb3BlbiAmLm9wZW4ge1xuXHRcdFx0XHRvcGFjaXR5OiAwO1xuXHRcdFx0fVxuXG5cdFx0XHQubmF2LW9wZW4gJi5jbG9zZSB7XG5cdFx0XHRcdG9wYWNpdHk6IDE7XG5cdFx0XHR9XG5cblx0XHR9XG5cblx0fVxuXG59XG4iLCJuYXYge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDgwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtODB2dyk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcztcbiAgei1pbmRleDogMTA7XG4gIGJhY2tncm91bmQtY29sb3I6ICRuYXYtYmc7XG4gIG92ZXJmbG93OiBhdXRvO1xuXG4gIC5uYXYtb3BlbiAmIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gIH1cblxuICB1bCB7XG4gICAgbWFyZ2luOiA2MHB4IDAgMCAwO1xuICAgIHBhZGRpbmc6IDEycHggMCAwIDA7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBsaW5lLWhlaWdodDogNDhweDtcbiAgfVxuXG4gIGxpIHtcblxuICAgIGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nOiAwIDAgMCAyNHB4O1xuICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgIGZvbnQtZmFtaWx5OiAnRmlyYSBTYW5zJyxzYW5zLXNlcmlmO1xuICAgICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICAgIGZvbnQtc2l6ZTogMjFweDtcbiAgICAgIGNvbG9yOiAkbmF2LWNvbG9yO1xuICAgIH1cblxuICAgIGE6YWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LTI1O1xuICAgIH1cblxuICAgICYuaGFzLWNoaWxkLW5hdiB7XG5cbiAgICAgIGEgLmdseXBoLXNwYW4ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgICAgIHdpZHRoOiA0OHB4O1xuICAgICAgICBoZWlnaHQ6IDQ4cHg7XG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vYXNzZXRzL2ltZy9tZW51LWl0ZW0tY2hldnJvbi5zdmcnKTtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSA1MCU7XG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAzMDBtcztcbiAgICAgIH1cblxuICAgICAgJi5hY3RpdmUgYSAuZ2x5cGgtc3BhbiB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC0xODBkZWcpO1xuICAgICAgfVxuXG4gICAgfVxuXG4gICAgdWwge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBtYXgtaGVpZ2h0OiAwO1xuICAgICAgdHJhbnNpdGlvbjogbWF4LWhlaWdodCAzMDBtcztcbiAgICB9XG5cbiAgICAmLmFjdGl2ZSB1bCB7XG4gICAgICBtYXgtaGVpZ2h0OiAzMjBweDtcbiAgICB9XG5cbiAgICB1bCBhIHtcbiAgICAgIGZvbnQtZmFtaWx5OiAnUG9ka292YScsc2VyaWY7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDM2cHg7XG4gICAgICBjb2xvcjogJGNoaWxkLW5hdi1jb2xvcjtcbiAgICB9XG5cbiAgICB1bCBhOmFjdGl2ZSB7XG4gICAgICBjb2xvcjogJGNoaWxkLW5hdi1jb2xvci1ob3ZlcjtcbiAgICB9XG5cbiAgICB1bCBhIC5nbHlwaC1zcGFuIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gIH1cblxufVxuXG4iLCIjbWFpbiB7XG5cdG1hcmdpbi10b3A6IDYwcHg7XG5cdG92ZXJmbG93LXg6IGhpZGRlbjtcblx0b3ZlcmZsb3cteTogYXV0bztcblx0YmFja2dyb3VuZC1jb2xvcjogJGJhc2UtYmc7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcblx0dHJhbnNpdGlvbjogdHJhbnNmb3JtIDQwMG1zLCBvcGFjaXR5IDQwMG1zO1xuXHRwYWRkaW5nOiAwIDI0cHggMjRweCAyNHB4O1xuXHR0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuXG5cdC5uYXYtb3BlbiAmIHtcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoODB2dyk7XG5cdFx0b3BhY2l0eTogMC41O1xuXHRcdHBvc2l0aW9uOiBmaXhlZDtcblx0fVxuXG5cdCNoZXJvLWltYWdlIHtcblx0XHRoZWlnaHQ6IDI0MHB4O1xuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHRvdmVyZmxvdzogaGlkZGVuO1xuXHRcdG1hcmdpbjogMCAtMjRweDtcblxuXHRcdGltZyB7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRtaW4td2lkdGg6IDQ4MHB4O1xuXHRcdFx0bWF4LXdpZHRoOiAxMDAlO1xuXHRcdFx0aGVpZ2h0OiBhdXRvO1xuXHRcdFx0bWluLWhlaWdodDogYXV0bztcblx0XHRcdGxlZnQ6IDUwJTtcblx0XHRcdHRvcDogNTAlO1xuXHRcdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcblx0XHR9XG5cblx0fVxuXG5cdGgyIHtcblx0XHRjb2xvcjogJG1haW4taGVhZGluZy1jb2xvcjtcblx0XHRmb250LWZhbWlseTogJ0ZpcmEgU2Fucycsc2Fucy1zZXJpZjtcblx0XHRmb250LXdlaWdodDogODAwO1xuXHRcdGZvbnQtc2l6ZTogNDRweDtcblx0XHRsaW5lLWhlaWdodDogNDhweDtcblx0XHR0ZXh0LWFsaWduOiBsZWZ0O1xuXHRcdG1hcmdpbjogNDZweCAwIDMzcHggMDtcblx0fVxuXG59XG4iLCI6OnNlbGVjdGlvbntcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuOjotbW96LXNlbGVjdGlvbntcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuOjotd2Via2l0LXNlbGVjdGlvbntcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuIiwiQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjMyMHB4KSB7XG5cbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDo0ODBweCkge1xuXG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6NzY4cHgpIHtcblx0QGltcG9ydCAnX2RlZmF1bHRzX2Rlc2t0b3Auc2Nzcyc7XG5cdEBpbXBvcnQgJy4uL3BhcnRpYWxzL19oZWFkZXJfZGVza3RvcC5zY3NzJztcblx0QGltcG9ydCAnLi4vcGFydGlhbHMvX25hdl9kZXNrdG9wLnNjc3MnO1xuXHRAaW1wb3J0ICcuLi9wYXJ0aWFscy9fbWFpbl9kZXNrdG9wLnNjc3MnO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjEwMjRweCkge1xuXG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MTE0MHB4KSB7XG5cbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDoxMjgwcHgpIHtcblxufVxuQG1lZGlhIHByaW50LCAoLW8tbWluLWRldmljZS1waXhlbC1yYXRpbzogNS80KSwgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMS4yNSksIChtaW4tcmVzb2x1dGlvbjogMTIwZHBpKSB7XG5cbn1cbiIsImJvZHkge1xuICBiYWNrZ3JvdW5kOiAkYmFzZS1iZztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgb3ZlcmZsb3cteTogYXV0bztcbn1cbiIsImhlYWRlciB7XG4gIHBvc2l0aW9uOiBzdGF0aWM7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDYwcHg7XG4gIHRyYW5zZm9ybTogbm9uZTtcbiAgdHJhbnNpdGlvbjogbm9uZTtcbn1cblxuLm5hdi1vcGVuIGhlYWRlciB7XG4gIHRyYW5zZm9ybTogbm9uZTtcbn1cblxuXHRoZWFkZXIgaDEge1xuXHQgIGxpbmUtaGVpZ2h0OiA2MHB4O1xuXHR9XG5cblx0aGVhZGVyICNtb2JpbGUtb3Blbi1jbG9zZS1idG4ge1xuXHQgIGRpc3BsYXk6IG5vbmU7XG5cdH1cblxuIiwibmF2IHtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IDA7XG5cdGxlZnQ6IDIyMHB4O1xuXHR3aWR0aDogYXV0bztcblx0aGVpZ2h0OiA2MHB4O1xuXHR0cmFuc2Zvcm06IG5vbmU7XG5cdHRyYW5zaXRpb246IG5vbmU7XG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRvdmVyZmxvdzogdmlzaWJsZTtcblxuXHQubmF2LW9wZW4gJiB7XG5cdFx0dHJhbnNmb3JtOiBub25lO1xuXHR9XG5cblx0dWwge1xuXHRcdGxpc3Qtc3R5bGU6IG5vbmU7XG5cdFx0bWFyZ2luOiAwO1xuXHRcdHBhZGRpbmc6IDA7XG5cdFx0d2lkdGg6IDk2MHB4O1xuXHRcdGxpbmUtaGVpZ2h0OiA2MHB4O1xuXHR9XG5cblx0bGkge1xuXHRcdGZsb2F0OiBsZWZ0O1xuXHRcdHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMzAwbXMsIGNvbG9yIDMwMG1zO1xuXG5cdFx0Jjpob3ZlciB7XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkbmF2LWJnO1xuXHRcdH1cblxuXHRcdGEge1xuXHRcdFx0Y29sb3I6ICRkZXNrdG9wLW5hdi1jb2xvcjtcblx0XHRcdHBhZGRpbmc6IDAgMjRweDtcblx0XHRcdGZvbnQtc2l6ZTogMTZweDtcblx0XHRcdHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMzAwbXMsIGNvbG9yIDMwMG1zO1xuXG5cdFx0fVxuXG5cdFx0Jjpob3ZlciBhIHtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRuYXYtYmc7XG5cdFx0XHRjb2xvcjogJGRlc2t0b3AtbmF2LWNvbG9yLWhvdmVyO1xuXHRcdH1cblxuXHRcdCYuaGFzLWNoaWxkLW5hdiB7XG5cdFx0XG5cdFx0XHRhIC5nbHlwaC1zcGFuIHtcblx0XHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHRcdH1cblxuXHRcdH1cblxuXHRcdHVsIHtcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdFx0dmlzaWJpbGl0eTogaGlkZGVuO1xuXHRcdFx0b3BhY2l0eTogMDtcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdHdpZHRoOiBhdXRvO1xuXHRcdFx0bWF4LWhlaWdodDogbm9uZTtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRuYXYtYmc7XG5cdFx0XHRsaW5lLWhlaWdodDogNDhweDtcblx0XHRcdHRyYW5zaXRpb246IG9wYWNpdHkgMzAwbXM7XG5cblx0XHRcdGxpOmhvdmVyIGEge1xuXHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkZGVza3RvcC1uYXYtYmctaG92ZXI7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Jjpob3ZlciB1bCB7XG5cdFx0XHR2aXNpYmlsaXR5OiB2aXNpYmxlO1xuXHRcdFx0b3BhY2l0eTogMTtcblx0XHR9XG5cblx0XHRsaSB7XG5cdFx0XHRmbG9hdDogbm9uZTtcblx0XHR9XG5cblx0XHR1bCBhIHtcblx0XHRcdHBhZGRpbmc6IDAgNDhweCAwIDI0cHg7XG5cdFx0fVxuXG5cdH1cblxufVxuXG4iLCIjbWFpbiB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB0cmFuc2Zvcm06IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIHRyYW5zaXRpb246IG5vbmU7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5uYXYtb3BlbiAjbWFpbiB7XG4gIHRyYW5zZm9ybTogbm9uZTtcbiAgb3BhY2l0eTogMTtcbiAgcG9zaXRpb246IHN0YXRpYztcbn1cblx0I21haW4gI2hlcm8taW1hZ2Uge1xuXHQgIGhlaWdodDogNjQwcHg7XG5cdCAgcG9zaXRpb246IHJlbGF0aXZlO1xuXHQgIG92ZXJmbG93OiBoaWRkZW47XG5cdCAgbWFyZ2luOiAwO1xuXHR9XG5cblx0XHQjbWFpbiAjaGVyby1pbWFnZSBpbWcge1xuXHRcdCAgcG9zaXRpb246IGFic29sdXRlO1xuXHRcdCAgbWluLXdpZHRoOiAxMDAlO1xuXHRcdCAgbWF4LXdpZHRoOiBpbml0aWFsO1xuXHRcdCAgaGVpZ2h0OiBhdXRvO1xuXHRcdCAgbWluLWhlaWdodDogNjQwcHg7XG5cdFx0ICBsZWZ0OiA1MCU7XG5cdFx0ICB0b3A6IDUwJTtcblx0XHQgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSk7XG5cdFx0fVxuXG5cdCNtYWluIGgyIHtcblx0ICBwb3NpdGlvbjogYWJzb2x1dGU7XG5cdCAgd2lkdGg6IDgyMHB4O1xuXHQgIHRleHQtYWxpZ246IGNlbnRlcjtcblx0ICBmb250LXNpemU6IDEyMHB4O1xuXHQgIGxpbmUtaGVpZ2h0OiAxMzJweDtcblx0ICBtYXJnaW46IDA7XG5cdCAgbGVmdDogNTAlO1xuXHQgIHRvcDogMzkycHg7XG5cdCAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwtNTAlKTtcblx0fVxuXG5cdCNtYWluICNtYWluLXNlY3Rpb24tY29weSB7XG5cdFx0bWF4LXdpZHRoOiA5MjBweDtcblx0XHRtYXJnaW46IDAgYXV0bztcblx0XHRwYWRkaW5nOiA2MHB4IDI0cHggMzBweCAyNHB4O1xuXHR9IiwiQG1lZGlhIHByaW50IHtcbiAgKiB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50O1xuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcbiAgICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICB9XG4gIGEsXG4gIGE6dmlzaXRlZCB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cbiAgYVtocmVmXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIoaHJlZikgXCIpXCI7XG4gIH1cbiAgYWJiclt0aXRsZV06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIChcIiBhdHRyKHRpdGxlKSBcIilcIjtcbiAgfVxuICAuaXIgYTphZnRlcixcbiAgIGFbaHJlZl49XCJqYXZhc2NyaXB0OlwiXTphZnRlcixcbiAgIGFbaHJlZl49XCIjXCJdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICB9XG4gIHByZSxcbiAgYmxvY2txdW90ZSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gIH1cbiAgdGhlYWQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcbiAgfVxuICB0cixcbiAgaW1nIHtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7XG4gIH1cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxuICBAcGFnZSB7XG4gICAgbWFyZ2luOiAwLjVjbTtcbiAgfVxuICBwLFxuICBoMixcbiAgaDMge1xuICAgIG9ycGhhbnM6IDM7XG4gICAgd2lkb3dzOiAzO1xuICB9XG4gIGgyLFxuICBoMyB7XG4gICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7XG4gIH1cbn1cbiJdfQ== */
